    if(spAssignUserDynamic.getSelectedItem() != null){

                    assigneduserAdd = spAssignUserDynamic.getSelectedItem().toString();

                    if (assigneduserAdd.equalsIgnoreCase("Select Assign User")) {

                        assigneduserAdd = "null";

                    }

                }

                else{

                    assigneduserAdd = "null";

                }

                if(spAlternativeUserDynamic.getSelectedItem() != null){

                    alternateuserAdd = spAlternativeUserDynamic.getSelectedItem().toString();

                    if (alternateuserAdd.equalsIgnoreCase("Select Alternate User")) {

                        alternateuserAdd = "null";

                    }

                }
                else{

                    alternateuserAdd = "null";

                }

                if(spSelectSupervisorDynamic.getSelectedItem() != null){

                    supervisorAdd = spSelectSupervisorDynamic.getSelectedItem().toString();

                    if (supervisorAdd.equalsIgnoreCase("Select Supervisor")) {

                        supervisorAdd = "null";

                    }
                }

                else{
                    supervisor = "null";

                }

                taskorder = String.valueOf(taskorder);

                date = rbDate.getText().toString().trim();

                if(date.equalsIgnoreCase("Date")){


                    date = "null";
                }


                if(Util.isNullOrEmpty(taskorder)){


                    taskorder = "1";

                }


                if (Util.isNullOrEmpty(comment)) {

                    comment = "null";
                }

                if (Util.isNullOrEmpty(deadline)) {

                    deadline = "null";

                }

                if (Util.isNullOrEmpty(taskstatus)) {

                    taskstatus = "null";


                }

                if (assigneduser.equalsIgnoreCase("Select Assign User")) {

                    assigneduser = "null";

                }
                if (alternateuser.equalsIgnoreCase("Select Alternate User")) {

                    alternateuser = "null";

                }
                if (supervisor.equalsIgnoreCase("Select Supervisor")) {

                    supervisor = "null";

                }

                Log.e("submit", "date :" + date + "\n" +"deadline :" + deadline + "\n" +
                        "taskstatus :" + taskstatus +"\n"+ "comment :" + comment + "\n" + "assigned user :" + assigneduser + "\n" +
                        "alternate user :" + alternateuser + "\n" + "supervisor :" + supervisor + "\n" + "assignedUser Add : " + assigneduserAdd + "\n"
                        +"alteruserAdd :" + alternateuserAdd + "\n" + "supervisor add : " + supervisorAdd+ "\n"
                         + "task order : " + taskorder + "taskid  : " + taskid+ "\n" );

                    Log.e("date length", String.valueOf(date.length()));

                /*ApproveRejectTaskwithOutUploading(comment,taskstatus,taskid,MainActivity.userid,MainActivity.username,assigneduser,taskorder,alternateuser,supervisor,"null","null","null",tas,date,date,date);*/

 <android.support.v7.widget.CardView
                    android:visibility="gone"
                    app:cardCornerRadius="8dp"
                    app:cardElevation="3dp"
                    app:cardUseCompatPadding="true"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content">

                    <LinearLayout
                        android:padding="10dp"
                        android:orientation="vertical"
                        android:gravity="center"
                        android:layout_width="match_parent"
                        android:layout_height="wrap_content">



                        <ImageView
                            android:id="@+id/iv_aproved_reject_take_photo"
                            android:layout_marginTop="10dp"
                            android:src="@drawable/camera"
                            android:layout_width="52dp"
                            android:layout_height="52dp" />
                        <TextView
                            android:padding="5dp"
                            android:textStyle="bold"
                            android:gravity="center"
                            android:text="Take a picture"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content" />
                        <LinearLayout
                            android:padding="3dp"
                            android:gravity="center"
                            android:weightSum="1"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content">

                            <View
                                android:layout_gravity="center"
                                android:gravity="center"
                                android:layout_weight="0.35"
                                android:background="@color/colorPrimaryDark"
                                android:layout_width="0dp"
                                android:layout_height="2dp"/>
                            <TextView
                                android:textStyle="bold"
                                android:textColor="@color/colorPrimaryDark"
                                android:gravity="center"
                                android:text="or"
                                android:layout_weight="0.10"
                                android:layout_width="0dp"
                                android:layout_height="wrap_content" />
                            <View
                                android:layout_gravity="center"
                                android:gravity="center"
                                android:layout_weight="0.35"
                                android:background="@color/colorPrimaryDark"
                                android:layout_width="0dp"
                                android:layout_height="2dp"/>
                        </LinearLayout>

                        <ImageView
                            android:id="@+id/iv_aproved_reject_choose_file"
                            android:layout_marginTop="10dp"
                            android:src="@drawable/filemanger"
                            android:layout_width="52dp"
                            android:layout_height="52dp" />

                        <TextView
                            android:padding="5dp"
                            android:textStyle="bold"
                            android:gravity="center"
                            android:text="Choose File"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content" />



                    </LinearLayout>

                </android.support.v7.widget.CardView>

                //workflow intiate


                  String html = "<!DOCTYPE html>\n" +
                                "<html>\n" +
                                "<head>\n" +
                                "    <title>Form</title>\n" +
                                "    <meta name=\"viewport\"\n" +
                                "          content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0\">\n" +
                                "    <link rel=\"stylesheet\" href=\"editor.css\">\n" +
                                "    <link rel=\"stylesheet\" href=\"editor-android.css\">\n" +
                                "</head>\n" +
                                "<body>\n" +
                                "<div contenteditable=\"true\" id=\"zss_field_title\" class=\"field\" nostyle>\n" +
                                "\n" +
                                "    <!-- Form used-->\n" +
                                "      <table style=\"width: 370px; height: 200px;\">\n" +
                                "          <tbody>\n" +
                                "          <tr style=\"height: 56px;\">\n" +
                                "              <td style=\"text-align: center; width: 769px; height: 56px;\" colspan=\"4\">\n" +
                                "                  <h1 style=\"color: #ff0000;\"><span style=\"color: #000000;\"><strong>Material Requisition Form</strong></span>\n" +
                                "                  </h1>\n" +
                                "              </td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>Requester:</strong></td>\n" +
                                "              <td style=\"width: 179px; height: 13px;\">&nbsp;store</td>\n" +
                                "              <td style=\"width: 277px; height: 13px;\"><strong>Date:</strong></td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">&nbsp;03.03.2018</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>Company:</strong></td>\n" +
                                "              <td style=\"width: 179px; height: 13px;\">&nbsp;CBSPL</td>\n" +
                                "              <td style=\"width: 277px; height: 13px;\"><strong>Required on or before:&nbsp;</strong>\n" +
                                "              </td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">&nbsp;03.03.2018</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>Division:</strong></td>\n" +
                                "              <td style=\"width: 179px; height: 13px;\">&nbsp;Imaging</td>\n" +
                                "              <td style=\"width: 277px; height: 13px;\"><strong>Project:</strong></td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">&nbsp;Custom Office IGI</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>S. No.</strong></td>\n" +
                                "              <td style=\"width: 462px; text-align: center; height: 13px;\" colspan=\"2\"><strong>Item\n" +
                                "                  Deion</strong></td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">Quantity</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13.875px;\">\n" +
                                "              <td style=\"width: 145px; height: 13.875px;\">\n" +
                                "                  <p>1&nbsp;Metro Card</p>\n" +
                                "              </td>\n" +
                                "              <td style=\"width: 462px; height: 13.875px;\" colspan=\"2\">&nbsp;</td>\n" +
                                "              <td style=\"width: 150px; height: 13.875px;\">\n" +
                                "                  <p>03</p>\n" +
                                "              </td>\n" +
                                "          </tr>\n" +
                                "          </tbody>\n" +
                                "      </table>\n" +
                                "      <p>GB /</p>\n" +
                                "\n" +
                                "    <!--  <table style=\"width: 370px; height: 200px;\">\n" +
                                "          <tbody>\n" +
                                "          <tr style=\"height: 56px;\">\n" +
                                "              <td style=\"text-align: center; width: 769px; height: 56px;\" colspan=\"4\">\n" +
                                "                  <h1 style=\"color: #ff0000;\"><span style=\"color: #000000;\"><strong>Material Requisition Form</strong></span></h1>\n" +
                                "              </td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>Requester:</strong></td>\n" +
                                "              <td style=\"width: 179px; height: 13px;\">&nbsp;</td>\n" +
                                "              <td style=\"width: 277px; height: 13px;\"><strong>Date:</strong></td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">&nbsp;</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>Company:</strong></td>\n" +
                                "              <td style=\"width: 179px; height: 13px;\">&nbsp;</td>\n" +
                                "              <td style=\"width: 277px; height: 13px;\"><strong>Required on or before:&nbsp;</strong></td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">&nbsp;</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>Division:</strong></td>\n" +
                                "              <td style=\"width: 179px; height: 13px;\">&nbsp;</td>\n" +
                                "              <td style=\"width: 277px; height: 13px;\"><strong>Project:</strong></td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">&nbsp;</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\"><strong>S. No.</strong></td>\n" +
                                "              <td style=\"width: 462px; text-align: center; height: 13px;\" colspan=\"2\"><strong>Item Description</strong></td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">Quantity</td>\n" +
                                "          </tr>\n" +
                                "          <tr style=\"height: 13px;\">\n" +
                                "              <td style=\"width: 145px; height: 13px;\">1</td>\n" +
                                "              <td style=\"width: 462px; height: 13px;\" colspan=\"2\">&nbsp;</td>\n" +
                                "              <td style=\"width: 150px; height: 13px;\">&nbsp;</td>\n" +
                                "          </tr>\n" +
                                "          </tbody>\n" +
                                "      </table>-->\n" +
                                "\n" +
                                "\n" +
                                "</div>\n" +
                                "\n" +
                                "</div>\n" +
                                "</body>\n" +
                                "</html>";

                        form = "<table style=\"width: 779px; height: 161px;\">\n" +
                                "<tbody>\n" +
                                "<tr style=\"height: 56px;\">\n" +
                                "<td style=\"text-align: center; width: 769px; height: 56px;\" colspan=\"4\">\n" +
                                "<h1 style=\"color: #ff0000;\"><span style=\"color: #000000;\"><strong>Material Requisition Form</strong></span></h1>\n" +
                                "</td>\n" +
                                "</tr>\n" +
                                "<tr style=\"height: 13px;\">\n" +
                                "<td style=\"width: 145px; height: 13px;\"><strong>Requester:</strong></td>\n" +
                                "<td style=\"width: 179px; height: 13px;\">&nbsp;store</td>\n" +
                                "<td style=\"width: 277px; height: 13px;\"><strong>Date:</strong></td>\n" +
                                "<td style=\"width: 150px; height: 13px;\">&nbsp;03.03.2018</td>\n" +
                                "</tr>\n" +
                                "<tr style=\"height: 13px;\">\n" +
                                "<td style=\"width: 145px; height: 13px;\"><strong>Company:</strong></td>\n" +
                                "<td style=\"width: 179px; height: 13px;\">&nbsp;CBSPL</td>\n" +
                                "<td style=\"width: 277px; height: 13px;\"><strong>Required on or before:&nbsp;</strong></td>\n" +
                                "<td style=\"width: 150px; height: 13px;\">&nbsp;03.03.2018</td>\n" +
                                "</tr>\n" +
                                "<tr style=\"height: 13px;\">\n" +
                                "<td style=\"width: 145px; height: 13px;\"><strong>Division:</strong></td>\n" +
                                "<td style=\"width: 179px; height: 13px;\">&nbsp;Imaging</td>\n" +
                                "<td style=\"width: 277px; height: 13px;\"><strong>Project:</strong></td>\n" +
                                "<td style=\"width: 150px; height: 13px;\">&nbsp;Custom Office IGI</td>\n" +
                                "</tr>\n" +
                                "<tr style=\"height: 13px;\">\n" +
                                "<td style=\"width: 145px; height: 13px;\"><strong>S. No.</strong></td>\n" +
                                "<td style=\"width: 462px; text-align: center; height: 13px;\" colspan=\"2\"><strong>Item Deion</strong></td>\n" +
                                "<td style=\"width: 150px; height: 13px;\">Quantity</td>\n" +
                                "</tr>\n" +
                                "<tr style=\"height: 13.875px;\">\n" +
                                "<td style=\"width: 145px; height: 13.875px;\">\n" +
                                "<p>1&nbsp;Metro Card</p>\n" +
                                "</td>\n" +
                                "<td style=\"width: 462px; height: 13.875px;\" colspan=\"2\">&nbsp;</td>\n" +
                                "<td style=\"width: 150px; height: 13.875px;\">\n" +
                                "<p>03</p>\n" +
                                "</td>\n" +
                                "</tr>\n" +
                                "</tbody>\n" +
                                "</table>\n" +
                                "<p>GB /</p>";


                        webView = findViewById(R.id.webview_workflow_form);
                        webView.setFocusableInTouchMode(true);
                        webView.setFocusable(true);
                        webView.requestFocus(View.FOCUS_DOWN);
                        webView.getSettings().setJavaScriptEnabled(true);
                        webView.getSettings().setSupportZoom(true);
                        webView.setHorizontalScrollBarEnabled(false);
                        webView.getSettings().setUseWideViewPort(true);
                        webView.getSettings().setLoadWithOverviewMode(true);
                        webView.setWebViewClient(new WebViewClient());


                        webView.getSettings().setPluginState(WebSettings.PluginState.ON);
                       WebSettings webSettings = webView.getSettings();
                       webSettings.setJavaScriptEnabled(true);
                        try {
                             progressDialog = new ProgressDialog(this);
                         progressDialog.setMessage("Loading.."); progressDialog.setCancelable(false);
                            webView.setWebViewClient(new MyWebViewClient());
                              webView.loadData(form,mimeType,encoding);
                         } catch (Exception e) {
                           e.toString();
                         }




                       /* webView.addJavascriptInterface(new MyJavaScriptInterface(this), "HtmlViewer");*/

                    /*    webView.setWebViewClient(new WebViewClient() {
                            @Override
                            public void onPageFinished(WebView view, String url) {
                                webView.loadUrl("javascript:window.HtmlViewer.showHTML" +
                                        "('<html>'+document.getElementsByTagName('html')[0].innerHTML+'</html>');");
                            }
                        });*/

                    /*    final class YourWebChromeClient extends WebChromeClient {
                            @Override
                            public boolean onJsAlert(WebView view, String url, String message, JsResult result) {
                                Toast.makeText(getApplicationContext(),
                                        "alert message =  " + message,
                                        Toast.LENGTH_SHORT).show();
                                result.confirm();
                                return true;
                            }
                        }*/
                       // webView.setWebChromeClient(new YourWebChromeClient());
                        //String htmlFile = getHtmlFromFile(this, "contentEditable.html");
                       // webView.loadDataWithBaseURL("file:///android_asset/", html, "text/html", "utf-8", "");

                        enableWebDebugging(true);

                       /* AssetManager assetManager = this.getAssets();
                        try {


                            assetManager.open("contentEditable.html");
                            BufferedWriter out = new BufferedWriter(new FileWriter("contentEditable.html"));


                            try {

                                out.write(html);  //Replace with the string
                                //you are trying to write
                            }
                            catch (IOException e)
                            {
                                System.out.println("Exception ");

                            }
                            finally
                            {
                                out.close();
                            }

                        } catch (IOException e) {
                            e.printStackTrace();
                        }*/


                    }


                    private class MyWebViewClient extends WebViewClient {
                      @Override
                         public boolean shouldOverrideUrlLoading(WebView view, String url) {
                            view.loadUrl(url);
                           progressDialog.dismiss();
                          return true;
                       }
                       @Override
                        public void onPageFinished(WebView view, String url) {
                             progressDialog.dismiss();
                         }
                   }


                    @SuppressLint("NewApi")
                    private void enableWebDebugging(boolean enable) {
                        if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
                            Log.i("TAG", "Enabling web debugging");
                            WebView.setWebContentsDebuggingEnabled(enable);
                        }
                    }

                    public static String getHtmlFromFile(Activity activity, String filename) {
                        try {
                            AssetManager assetManager = activity.getAssets();
                            InputStream in =  assetManager.open(filename);
                            return getStringFromInputStream(in);

                        } catch (IOException e) {
                            Log.e("TAG", e.getMessage());
                            return null;
                        }
                    }

                    public String getHtmlFromTextBox(){


                        String html = "";

                        return html;

                    }


                    public static String getStringFromInputStream(InputStream inputStream) throws IOException {
                        InputStreamReader is = new InputStreamReader(inputStream);
                        StringBuilder sb = new StringBuilder();
                        BufferedReader br = new BufferedReader(is);
                        String read = br.readLine();
                        while (read != null) {
                            sb.append(read);
                            sb.append('\n');
                            read = br.readLine();
                        }
                        return sb.toString();
                    }

                    class MyJavaScriptInterface {

                        private Context ctx;

                        MyJavaScriptInterface(Context ctx) {
                            this.ctx = ctx;
                        }

                        public void showHTML(String html) {
                            new AlertDialog.Builder(ctx).setTitle("HTML").setMessage(html)
                                    .setPositiveButton(android.R.string.ok, null).setCancelable(false).create().show();
                        }

                    }


                       <android.support.v7.widget.CardView
                            android:id="@+id/cv_intiateworkflow_toolbar"
                            android:layout_width="match_parent"
                            android:layout_height="wrap_content"
                            app:cardElevation="10dp">

                            <android.support.design.widget.AppBarLayout
                                android:layout_width="match_parent"
                                android:layout_height="wrap_content"
                                android:background="@color/colorPrimary"
                                android:theme="@style/AppTheme.AppBarOverlay">

                                <android.support.v7.widget.Toolbar
                                    android:id="@+id/toolbar_intiateworkflow"
                                    android:layout_width="match_parent"
                                    android:layout_height="wrap_content"
                                    android:background="@color/colorPrimary"
                                    app:navigationIcon="@drawable/ic_back"
                                    app:popupTheme="@style/AppTheme.PopupOverlay"
                                    app:title="Initiate WorkFlow"
                                    app:titleTextColor="@color/white">

                                </android.support.v7.widget.Toolbar>
                            </android.support.design.widget.AppBarLayout>


                        </android.support.v7.widget.CardView>

                         <android.support.v7.widget.CardView
                             app:cardElevation="8dp"
                             app:cardCornerRadius="8dp"
                             app:cardUseCompatPadding="true"
                             android:layout_width="match_parent"
                             android:layout_height="wrap_content"
                             tools:ignore="WebViewLayout">

                             <WebView
                                 android:layout_margin="5dp"
                                 android:visibility="visible"
                                 android:id="@+id/webview_workflow_form"
                                 android:layout_width="match_parent"
                                 android:layout_height="wrap_content">

                             </WebView>

                         </android.support.v7.widget.CardView>




                       <Button
                           android:text="go"
                           android:layout_width="wrap_content"
                           android:layout_height="wrap_content" />



                           //code for camera image picker


       /* @Override
    public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {
        if (mCropImageUri != null && grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
            // required permissions granted, start crop image activity

            Log.e("mCropImageUri", String.valueOf(mCropImageUri));

            startCropImageActivity(mCropImageUri);

        } else {
            Toast.makeText(this, "Cancelling, required permissions are not granted", Toast.LENGTH_LONG).show();
        }
    }*/


   /* public String compressImage(String imageUri) {

        String filePath = getRealPathFromURI(imageUri);
        Bitmap scaledBitmap = null;

        BitmapFactory.Options options = new BitmapFactory.Options();

//      by setting this field as true, the actual bitmap pixels are not loaded in the memory. Just the bounds are loaded. If
//      you try the use the bitmap here, you will get null.
        options.inJustDecodeBounds = true;
        Bitmap bmp = BitmapFactory.decodeFile(filePath, options);

        int actualHeight = options.outHeight;
        int actualWidth = options.outWidth;

//      max Height and width values of the compressed image is taken as 816x612

        float maxHeight = 816.0f;
        float maxWidth = 612.0f;
        float imgRatio = actualWidth / actualHeight;
        float maxRatio = maxWidth / maxHeight;

//      width and height values are set maintaining the aspect ratio of the image

        if (actualHeight > maxHeight || actualWidth > maxWidth) {
            if (imgRatio < maxRatio) {
                imgRatio = maxHeight / actualHeight;
                actualWidth = (int) (imgRatio * actualWidth);
                actualHeight = (int) maxHeight;
            } else if (imgRatio > maxRatio) {
                imgRatio = maxWidth / actualWidth;
                actualHeight = (int) (imgRatio * actualHeight);
                actualWidth = (int) maxWidth;
            } else {
                actualHeight = (int) maxHeight;
                actualWidth = (int) maxWidth;

            }
        }

//      setting inSampleSize value allows to load a scaled down version of the original image

        options.inSampleSize = calculateInSampleSize(options, actualWidth, actualHeight);

//      inJustDecodeBounds set to false to load the actual bitmap
        options.inJustDecodeBounds = false;

//      this options allow android to claim the bitmap memory if it runs low on memory
        options.inPurgeable = true;
        options.inInputShareable = true;
        options.inTempStorage = new byte[16 * 1024];

        try {
//          load the bitmap from its path
            bmp = BitmapFactory.decodeFile(filePath, options);
        } catch (OutOfMemoryError exception) {
            exception.printStackTrace();

        }
        try {
            scaledBitmap = Bitmap.createBitmap(actualWidth, actualHeight, Bitmap.Config.ARGB_8888);
        } catch (OutOfMemoryError exception) {
            exception.printStackTrace();
        }

        float ratioX = actualWidth / (float) options.outWidth;
        float ratioY = actualHeight / (float) options.outHeight;
        float middleX = actualWidth / 2.0f;
        float middleY = actualHeight / 2.0f;

        Matrix scaleMatrix = new Matrix();
        scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);

        Canvas canvas = new Canvas(scaledBitmap);
        canvas.setMatrix(scaleMatrix);
        canvas.drawBitmap(bmp, middleX - bmp.getWidth() / 2, middleY - bmp.getHeight() / 2, new Paint(Paint.FILTER_BITMAP_FLAG));

//      check the rotation of the image and display it properly
        ExifInterface exif;
        try {
            exif = new ExifInterface(filePath);

            int orientation = exif.getAttributeInt(
                    ExifInterface.TAG_ORIENTATION, 0);
            Log.d("EXIF", "Exif: " + orientation);
            Matrix matrix = new Matrix();
            if (orientation == 6) {
                matrix.postRotate(90);
                Log.d("EXIF", "Exif: " + orientation);
            } else if (orientation == 3) {
                matrix.postRotate(180);
                Log.d("EXIF", "Exif: " + orientation);
            } else if (orientation == 8) {
                matrix.postRotate(270);
                Log.d("EXIF", "Exif: " + orientation);
            }
            scaledBitmap = Bitmap.createBitmap(scaledBitmap, 0, 0,
                    scaledBitmap.getWidth(), scaledBitmap.getHeight(), matrix,
                    true);
        } catch (IOException e) {
            e.printStackTrace();
        }

        FileOutputStream out = null;
        String filename = getFilename();
        try {
            out = new FileOutputStream(filename);

//          write the compressed bitmap at the destination specified by filename.
            scaledBitmap.compress(Bitmap.CompressFormat.JPEG, 80, out);

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        return filename;

    }

    public String getFilename() {
        File file = new File(Environment.getExternalStorageDirectory().getPath(), "MyFolder/Images");
        if (!file.exists()) {
            file.mkdirs();
        }
        String uriSting = (file.getAbsolutePath() + "/" + System.currentTimeMillis() + ".jpg");
        return uriSting;

    }

    private String getRealPathFromURI(String contentURI) {
        Uri contentUri = Uri.parse(contentURI);
        Cursor cursor = getContentResolver().query(contentUri, null, null, null, null);
        if (cursor == null) {
            return contentUri.getPath();
        } else {
            cursor.moveToFirst();
            int index = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);
            return cursor.getString(index);
        }
    }*/

   /* public int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {
        final int height = options.outHeight;
        final int width = options.outWidth;
        int inSampleSize = 1;

        if (height > reqHeight || width > reqWidth) {
            final int heightRatio = Math.round((float) height / (float) reqHeight);
            final int widthRatio = Math.round((float) width / (float) reqWidth);
            inSampleSize = heightRatio < widthRatio ? heightRatio : widthRatio;
        }
        final float totalPixels = width * height;
        final float totalReqPixelsCap = reqWidth * reqHeight * 2;
        while (totalPixels / (inSampleSize * inSampleSize) > totalReqPixelsCap) {
            inSampleSize++;
        }

        return inSampleSize;
    }*/


    /**
     * Start pick image activity with chooser.
     */
  /*  public void onSelectImageClick(View view) {

        CropImage.startPickImageActivity(this);




    }*/


    /*@Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {

        try {
            switch (requestCode) {
                case 101:
                    if (resultCode == Activity.RESULT_OK) {
                        if (data != null) {
                            selectedImage = data.getData(); // the uri of the image taken
                            if (String.valueOf((Bitmap) data.getExtras().get("data")).equals("null")) {
                                bitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), selectedImage);
                            } else {
                                bitmap = (Bitmap) data.getExtras().get("data");
                            }
                            if (Float.valueOf(getImageOrientation()) >= 0) {
                                bitmapRotate = rotateImage(bitmap, Float.valueOf(getImageOrientation()));
                            } else {
                                bitmapRotate = bitmap;
                                bitmap.recycle();
                            }

                            ivTakePic.setVisibility(View.VISIBLE);
                            ivTakePic.setImageBitmap(bitmapRotate);

//                            Saving image to mobile internal memory for sometime
                            //String root = getApplicationContext().getFilesDir().toString();
                            String root = "sdcard/DCIM/EzeePea Uploads";
                            Log.e("root",root);
                            File myDir = new File(root);
                            myDir.mkdirs();

                            Random generator = new Random();
                            int n = 10000;
                            n = generator.nextInt(n);

//                            Give the file name that u want
                            //fname = "null" + n + ".jpg";
                            // Create an image file name
                          *//*  String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
                            String fname = "JPG_" + timeStamp + "_"; *//*
     *//*
                            imagepath = root+ fname+".jpg";
                            file = new File(myDir, fname);
                            upflag = true;*//*


                            //   Give the file name that u want

                            String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());

                            fname = "JPG_"+timeStamp + n + ".jpg";

                            imagepath = root +fname;
                            file = new File(myDir, fname);
                            upflag = true;


                        }
                    }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        super.onActivityResult(requestCode, resultCode, data);
    }*/




/*
    public static Bitmap rotateImage(Bitmap source, float angle) {
        Bitmap retVal;

        Matrix matrix = new Matrix();
        matrix.postRotate(angle);
        retVal = Bitmap.createBitmap(source, 0, 0, source.getWidth(), source.getHeight(), matrix, true);

        return retVal;
    }




    //    In some mobiles image will get rotate so to correting that this code will help us
    private int getImageOrientation() {
        final String[] imageColumns = {MediaStore.Images.Media._ID, MediaStore.Images.ImageColumns.ORIENTATION};
        final String imageOrderBy = MediaStore.Images.Media._ID + " DESC";
        Cursor cursor = getContentResolver().query(MediaStore.Images.Media.EXTERNAL_CONTENT_URI,
                imageColumns, null, null, imageOrderBy);

        if (cursor.moveToFirst()) {
            int orientation = cursor.getInt(cursor.getColumnIndex(MediaStore.Images.ImageColumns.ORIENTATION));
            System.out.println("orientation===" + orientation);
            cursor.close();
            return orientation;
        } else {
            return 0;
        }
    }
*/


/*    //    Saving file to the mobile internal memory
    private void saveFile(Bitmap sourceUri, File destination) {

        try {
            FileOutputStream out = new FileOutputStream(destination);

            sourceUri.compress(Bitmap.CompressFormat.JPEG, 100, out);


            out.flush();
            out.close();
            Toast.makeText(this, "File saved Succesfully", Toast.LENGTH_SHORT).show();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }*/

   /* private File createImageFile() throws IOException {
        // Create an image file name
        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
        String imageFileName = "JPEG_" + timeStamp + "_";
        File storageDir = Environment.getExternalStoragePublicDirectory(
                Environment.DIRECTORY_PICTURES);
        File image = File.createTempFile(
                imageFileName,  *//* prefix *//*
                ".jpg",         *//* suffix *//*
                storageDir      *//* directory *//*
        );

        // Save a file: path for use with ACTION_VIEW intents
       // mCurrentPhotoPath = "file:" + image.getAbsolutePath();
        return image;
    }*/


﻿step id :185ctaskOrder :2docID :23596ctaskID :561assignBy :8id :14092wfid :190ticket :CVAT_8_1537348265taskremark :date :2018-09-19 15:35